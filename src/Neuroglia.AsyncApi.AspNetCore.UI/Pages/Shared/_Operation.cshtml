@inject Neuroglia.Serialization.IJsonSerializer Serializer
@model OperationDefinitionViewModel
@{
    var actionType = this.Model.ActionType;
    var operation = this.Model.Operation;
    var messages = this.Model.Messages;
    // var jsonPayload = message?.Payload == null ? null : this.Serializer.SerializeToText(message?.Payload);
    // var schema = string.IsNullOrWhiteSpace(jsonPayload) ? null : JsonSchema.FromText(jsonPayload);
    var operationRef = $"{this.Model.OperationId!.ToLowerInvariant()}-{EnumHelper.Stringify(actionType).ToLowerInvariant()}";
    var channel = this.Model.Document.DereferenceChannelDefinitionForOperation(operation);
    var channelRef = operation.Channel.Reference.Replace("#", string.Empty).Replace("/", "_");

    var badgeColor = actionType == ActionType.Receive ? "info" : "info";
    var badgeTooltip = actionType == ActionType.Send ? "An operation used to publish a message to the specified channel." : "An operation used to subscribe to messages from the specified channel.";
    var badgeText = Enum.GetName(typeof(ActionType), actionType).ToUpper();
}

<div class="m-3">
    <div class="card">

        <a data-bs-toggle="collapse" href="#@operationRef" role="button" aria-expanded="false" title="@(string.IsNullOrWhiteSpace(operation.Title ?? operation.Summary) ? this.Model.OperationId : (operation.Title ?? operation.Summary))">
            <div class="card-header bg-transparent">
                <div class="row">
                    <div class="col-md-6">
                        <span class="badge border me-2 border-@badgeColor text-@badgeColor" title="@badgeTooltip">@badgeText</span>
                        <span class="h5 text-secondary">@this.Model.OperationId</span>
                        <small class="font-italic text-muted ms-1"> [@(channel?.Title ?? this.Model.ChannelKey)]</small>
                    </div>
                    <div class="col-md-6 text-end">
                        @if (operation.Tags != null)
                        {
                            foreach (var tag in operation.Tags)
                            {
                                <span class="badge rounded-pill border border-secondary text-secondary" title="@tag.Description">@tag.Name</span>
                            }
                        }
                    </div>
                </div>
            </div>
        </a>

        <div id="@operationRef" class="card-body collapse">

            @if (!string.IsNullOrWhiteSpace(operation.Summary))
            {
                <p><small class="text-secondary">@operation.Summary</small></p>
            }

            <div class="card border-0">
                <a data-bs-toggle="collapse" href="#@(channelRef)_bindings" role="button" aria-expanded="false">
                    <div class="card-header bg-transparent">
                        <span class="font-weight-bold text-secondary">Channel Bindings</span>
                    </div>
                </a>
                <div id="@(channelRef)_bindings" class="card-body m-0 p-0 collapse show">
                    @if (channel?.Bindings == null || !channel.Bindings.AsEnumerable().Any())
                    {
                        <p class="alert alert-warning fst-italic my-3">No bindings defined.</p>
                    }
                    else
                    {
                        @foreach (var binding in channel.Bindings.AsEnumerable())
                        {
                            <partial name="_Binding" model="new BindingDefinitionViewModel(this.Model.Document, binding, channelRef)" />
                        }
                    }
                </div>
            </div>

            <div class="card border-0">
                <a data-bs-toggle="collapse" href="#@(operationRef)_bindings" role="button" aria-expanded="false">
                    <div class="card-header bg-transparent">
                        <span class="font-weight-bold text-secondary">Operation Bindings</span>
                    </div>
                </a>
                <div id="@(operationRef)_bindings" class="card-body m-0 p-0 collapse show">
                    @if (operation.Bindings == null || !operation.Bindings.AsEnumerable().Any())
                    {
                        <p class="alert alert-warning fst-italic my-3">No bindings defined.</p>
                    }
                    else
                    {
                        @foreach (var binding in operation.Bindings.AsEnumerable())
                        {
                            <partial name="_Binding" model="new BindingDefinitionViewModel(this.Model.Document, binding, operationRef)" />
                        }
                    }
                </div>
            </div>

            <div class="card border-0">
                <a data-bs-toggle="collapse" href="#@(operationRef)_messages" role="button" aria-expanded="false">
                <div class="card-header bg-transparent">
                    <span class="font-weight-bold text-secondary">Message(s)</span>
                </div>
                </a>
                <div id="@(operationRef)_messages" class="card-body p-0 m-0 collapse show">
                    @if (messages == null || !messages.Any())
                    {
                        <p class="alert alert-warning fst-italic m-3">No message has been defined for the operation.</p>
                    }
                    else if (messages.Count == 1)
                    {
                        <partial name="_Message" model="new MessageDefinitionViewModel(this.Model.Document, 1, operationRef, messages.Single())" />
                    }
                    else
                    {
                        int index = 1;
                        foreach(var messageOption in messages)
                        {
                            <partial name="_Message" model="new MessageDefinitionViewModel(this.Model.Document, index, operationRef, messageOption)" />
                            index++;
                        }
                    }
                </div>
            </div>

            @if (operation.Reply != null)
            {
                var replyMessageDefinitions = this.Model.Document.DereferenceMessageDefinitionsForReplyOperation(operation);
                <div class="card my-3">
                    <a data-bs-toggle="collapse" href="#@(operationRef)_reply" role="button" aria-expanded="false">
                        <div class="card-header bg-transparent">
                            <span class="font-weight-bold text-secondary">Reply Information</span>
                        </div>
                    </a>
                    <div id="@(operationRef)_reply" class="card-body p-0 m-0 collapse">
                        <p class="m-3">REPLY CHANNEL INFORMATION</p>
                        <p class="fst-italic m-3">Reply will be provided via this designated address: <span class="badge rounded-pill border border-secondary text-secondary" title="@channel?.Address">@channel?.Address</span></p>
                        @if (!string.IsNullOrWhiteSpace(operation.Reply.Address?.Location))
                        {
                            <p class="m-3">REPLY ADDRESS INFORMATION</p>
                            <p class="fst-italic m-3">Reply will be sent to the address provided in: <span class="badge rounded-pill border border-secondary text-secondary" title="@operation.Reply.Address.Location">@operation.Reply.Address.Location</span>
                                @if (!string.IsNullOrWhiteSpace(operation.Reply.Address?.Description))
                                {
                                    <div class="m-3"><small class="text-secondary">@operation.Reply.Address.Description</small></div>
                                }
                            </p>
                        }

                        <div class="card border-0 m-3">
                            <a data-bs-toggle="collapse" href="#@(operationRef)_replymessages" role="button" aria-expanded="false">
                                <div class="card-header bg-transparent">
                                    <span class="font-weight-bold text-secondary">Expected Reply Message</span>
                                </div>
                            </a>
                            <div id="@(operationRef)_replymessages" class="card-body p-0 m-0 collapse show">
                                @if (replyMessageDefinitions == null || !replyMessageDefinitions.Any())
                                {
                                    <p class="alert alert-warning fst-italic m-3">No reply message has been defined for the operation.</p>
                                }
                                else if (replyMessageDefinitions.Count == 1)
                                {
                                    <partial name="_Message" model="new MessageDefinitionViewModel(this.Model.Document, 1, operationRef, replyMessageDefinitions.Single())" />
                                }
                                else
                                {
                                    int index = 1;
                                    foreach (var messageOption in replyMessageDefinitions)
                                    {
                                        <partial name="_Message" model="new MessageDefinitionViewModel(this.Model.Document, index, operationRef, messageOption)" />
                                        index++;
                                    }
                                }
                            </div>
                        </div>

                    </div>
                </div>
            }

        </div>
    </div>
</div>